#
# GraphiQL is an in-browser tool for writing, validating, and
# testing GraphQL queries.
#
# Type queries into this side of the screen, and you will see intelligent
# typeaheads aware of the current GraphQL type schema and live syntax and
# validation errors highlighted within the text.
#
# GraphQL queries typically start with a "{" character. Lines that starts
# with a # are ignored.
#
# An example GraphQL query might look like:
#
#     {
#       field(arg: "value") {
#         subField
#       }
#     }
#
# Keyboard shortcuts:
#
#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)
#
#       Run Query:  Ctrl-Enter (or press the play button above)
#
#   Auto Complete:  Ctrl-Space (or just start typing)
#
# query getSingleMusician($musicianID: Int!) {
#   musician(id: $musicianID) {
#     name
#     genres
#     description
#     url
#     instruments
#     associatedActs
#   }
# }

query getArtistWithFragments($artistID1: Int!, $artistID2: Int!, $artistID3: Int!) {
  artist1: artist(id: $artistID1){
    ...artistFields
  },
  artist2: artist(id: $artistID2){
    ...artistFields
  },
  artist3: artist(id: $artistID3){
    ...artistFields
  }
}
mutation updateArtistDescription($idToUpdate: Int!, $description: String!){
  updateArtistDescription(id: $idToUpdate, description: $description) {
    ...artistFields
  }
}
fragment artistFields on Artist {
  name
  genres
  description
  url
  instruments
  associatedActs,
  activeYears
}
